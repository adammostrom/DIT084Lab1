Partial Correctness Proof:

(1) given
wp(
    res := 1;
    var i := 2;
    while i <= n 
        invariant 2 <= i <= n + 1
        invariant res == fact(i - 1)
        decreases n - i + 1
    {
        res := res * i;
        i := i + 1;
    }
    , res == fact(n)
)


(2) use sequential rule to separate statements
wp(
    res := 1;,
    wp(
        var i := 2;,
        wp(
            while i <= n 
                invariant 2 <= i <= n + 1
                invariant res == fact(i - 1)
                decreases n - i + 1
            {
                res := res * i;
                i := i + 1;
            }
            , res == fact(n)
        )
    )
)


(3) substitute loop for its invariants, assuming that the loops hold (to be proven later)
wp(
    res := 1;,
    wp(
        var i := 2;,
        wp(
            2 <= i <= n + 1 && res == fact(i - 1) && decreases (n - i + 1)
            , res == fact(n)
        )
    )
)


(4) substitue res with fact(n)
wp(
    res := 1;,
    wp(
        var i := 2;,
        2 <= i <= n + 1 && fact(n) == fact(i - 1) && decreases (n - i + 1)
    )
)


(5) substitute n + 1 for i
    > knowing that (n - i + 1) as the loop variant, decreases to equal 0 when the loop finishes (due to being decremented
      by only 1 each iteration), we can then assume the loop being correct implies that n - i + 1 == 0 and
      therefore i == n + 1.
    > if the loop did not run at all, the loop's condition (i <= n) implies that (i > n); The loop invariant
      (2 <= i <= n + 1) means that for i to be greater than n, i must also equal (n + 1) to satisfy this invariant. 
wp(
    res := 1;,
    wp(
        var i := 2;,
        2 <= i <= n + 1 && fact(n) == fact((n + 1) - 1)
    )
)


(6) substitute i
wp(
    res := 1;,
    2 <= 2 <= n + 1 && fact(n) == fact((n + 1) - 1)
)


(7) substitute res (nothing to change)
2 <= 2 <= n + 1 && fact(n) == fact((n + 1) - 1)


(8) trivial simplification
n >= 1 && true


(9) trivial simplification
n >= 1

(10) proof of our precondition being a subset of the weakest precondition is trivial
Q -> wp
(n > 0) => (n >= 1)   




Complete Correctness Proof:

